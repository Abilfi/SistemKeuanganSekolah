/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

/**
 *
 * @author abil6
 */
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import koneksi.DBConnection;

public class CetakBuktiPembayaran extends javax.swing.JFrame {

    /**
     * Creates new form CetakBuktiPembayaranForm
     */
    private int idSiswa; // Untuk menyimpan ID Siswa yang sedang login
    private DefaultTableModel model;
    
    public CetakBuktiPembayaran(int idSiswa) {
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        this.idSiswa = idSiswa;
        initComponents();
        setLocationRelativeTo(null);
        setupTable();
        loadRiwayatPembayaran();
        btnCetak.setEnabled(false); // Nonaktifkan tombol cetak sampai pembayaran dipilih
        
        // Tambahkan listener untuk pemilihan baris di tabel
        tblRiwayatPembayaran.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting() && tblRiwayatPembayaran.getSelectedRow() != -1) {
                    btnCetak.setEnabled(true);
                    displaySelectedPaymentInfo();
                } else {
                    btnCetak.setEnabled(false);
                    lblInfoPembayaran.setText("Pilih pembayaran dari tabel untuk melihat detail.");
                }
            }
        });
        
    }
    
    private void setupTable() {
        model = new DefaultTableModel();
        tblRiwayatPembayaran.setModel(model);
        model.addColumn("ID Pembayaran");
        model.addColumn("Tagihan (Bulan, Tahun)");
        model.addColumn("Tanggal Bayar");
        model.addColumn("Nominal Bayar");
    }
    
    private void loadRiwayatPembayaran() {
        model.setRowCount(0); // Bersihkan tabel
        Connection conn = DBConnection.getConnection();
        if (conn != null) {
            String sql = "SELECT p.id_pembayaran, t.bulan, t.tahun, p.tanggal_bayar, p.nominal_bayar " +
                         "FROM pembayaran p " +
                         "JOIN tagihan t ON p.id_tagihan = t.id_tagihan " +
                         "WHERE p.id_siswa = ? ORDER BY p.tanggal_bayar DESC";
            try (PreparedStatement pst = conn.prepareStatement(sql)) {
                pst.setInt(1, idSiswa);
                ResultSet rs = pst.executeQuery();
                while (rs.next()) {
                    model.addRow(new Object[]{
                        rs.getInt("id_pembayaran"),
                        rs.getString("bulan") + " " + rs.getInt("tahun"),
                        rs.getDate("tanggal_bayar"),
                        rs.getDouble("nominal_bayar")
                    });
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Gagal memuat riwayat pembayaran: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
        }
    }
    
    private void displaySelectedPaymentInfo() {
        int selectedRow = tblRiwayatPembayaran.getSelectedRow();
        if (selectedRow != -1) {
            int idPembayaran = (int) model.getValueAt(selectedRow, 0);
            String deskripsiTagihan = (String) model.getValueAt(selectedRow, 1);
            java.sql.Date tanggalBayar = (java.sql.Date) model.getValueAt(selectedRow, 2);
            double nominalBayar = (double) model.getValueAt(selectedRow, 3);
            
            // Format tanggal untuk tampilan yang lebih baik
            SimpleDateFormat sdf = new SimpleDateFormat("dd MMMM yyyy");
            
            lblInfoPembayaran.setText(
                "<html><h3>Detail Pembayaran</h3>" +
                "ID Pembayaran: <b>" + idPembayaran + "</b><br>" +
                "Tagihan: <b>" + deskripsiTagihan + "</b><br>" +
                "Tanggal Bayar: <b>" + sdf.format(tanggalBayar) + "</b><br>" +
                "Nominal Bayar: <b>Rp. " + String.format("%.2f", nominalBayar) + "</b></html>"
            );
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRiwayatPembayaran = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnCetak = new javax.swing.JButton();
        lblInfoPembayaran = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("CETAK BUKTI PEMBAYARAN");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(290, 290, 290)
                .addComponent(jLabel1)
                .addContainerGap(294, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        tblRiwayatPembayaran.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblRiwayatPembayaran);

        btnCetak.setText("Cetak Bukti");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });

        lblInfoPembayaran.setText("ã…¤");

        jButton1.setText("Kembali");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCetak)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblInfoPembayaran)
                .addGap(39, 39, 39))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblInfoPembayaran)
                .addGap(113, 113, 113)
                .addComponent(btnCetak)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRiwayatPembayaran.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih pembayaran yang ingin dicetak!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int idPembayaran = (int) model.getValueAt(selectedRow, 0);
        
        // --- Bagian ini adalah simulasi cetak / generate bukti pembayaran ---
        // Di aplikasi nyata, Anda akan menggunakan library seperti JasperReports di sini.
        // Contoh: Ambil data lengkap untuk laporan
        try {
            Connection conn = DBConnection.getConnection();
            if (conn != null) {
                String sql = "SELECT p.id_pembayaran, s.nis, s.nama_siswa, s.kelas, " +
                             "t.bulan, t.tahun, t.nominal AS nominal_tagihan, " +
                             "p.tanggal_bayar, p.nominal_bayar " +
                             "FROM pembayaran p " +
                             "JOIN siswa s ON p.id_siswa = s.id_siswa " +
                             "JOIN tagihan t ON p.id_tagihan = t.id_tagihan " +
                             "WHERE p.id_pembayaran = ?";
                PreparedStatement pst = conn.prepareStatement(sql);
                pst.setInt(1, idPembayaran);
                ResultSet rs = pst.executeQuery();
                
                if (rs.next()) {
                    String bukti = "=== BUKTI PEMBAYARAN SPP ===\n\n" +
                                   "ID Pembayaran: " + rs.getInt("id_pembayaran") + "\n" +
                                   "--------------------------\n" +
                                   "NIS: " + rs.getString("nis") + "\n" +
                                   "Nama Siswa: " + rs.getString("nama_siswa") + "\n" +
                                   "Kelas: " + rs.getString("kelas") + "\n" +
                                   "--------------------------\n" +
                                   "Tagihan Bulan: " + rs.getString("bulan") + " " + rs.getInt("tahun") + "\n" +
                                   "Nominal Tagihan: Rp. " + String.format("%.2f", rs.getDouble("nominal_tagihan")) + "\n" +
                                   "--------------------------\n" +
                                   "Tanggal Bayar: " + new SimpleDateFormat("dd MMMM yyyy").format(rs.getDate("tanggal_bayar")) + "\n" +
                                   "Nominal Dibayar: Rp. " + String.format("%.2f", rs.getDouble("nominal_bayar")) + "\n\n" +
                                   "Terima Kasih.";
                    
                    JOptionPane.showMessageDialog(this, bukti, "Detail Bukti Pembayaran", JOptionPane.PLAIN_MESSAGE);
                    
                    // --- Placeholder untuk cetak ke PDF/Printer ---
                    // Contoh sintaks (tidak akan berfungsi tanpa library):
                    // try {
                    //     JasperReport jr = JasperCompileManager.compileReport("path/to/your/report.jrxml");
                    //     Map<String, Object> parameters = new HashMap<>();
                    //     parameters.put("ID_PEMBAYARAN", idPembayaran);
                    //     JasperPrint jp = JasperFillManager.fillReport(jr, parameters, conn);
                    //     JasperViewer.viewReport(jp, false); // Tampilkan preview
                    //     // JasperPrintManager.printReport(jp, true); // Langsung cetak
                    // } catch (JRException ex) {
                    //     ex.printStackTrace();
                    //     JOptionPane.showMessageDialog(this, "Gagal mencetak laporan: " + ex.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
                    // }
                } else {
                    JOptionPane.showMessageDialog(this, "Detail pembayaran tidak ditemukan.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
                }
                rs.close();
                pst.close();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal mengambil detail pembayaran: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
        // --- Akhir simulasi cetak ---
        
    }//GEN-LAST:event_btnCetakActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(CetakBuktiPembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(CetakBuktiPembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(CetakBuktiPembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(CetakBuktiPembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new CetakBuktiPembayaran(1).setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblInfoPembayaran;
    private javax.swing.JTable tblRiwayatPembayaran;
    // End of variables declaration//GEN-END:variables
}
