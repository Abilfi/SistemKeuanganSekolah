/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

/**
 *
 * @author abil6
 */
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import koneksi.DBConnection;     
import ui.AdminDashboard;

public class ManajemenSiswa extends javax.swing.JFrame {

    /**
     * Creates new form ManajemenSiswaForm
     */
    private DefaultTableModel model;
    
    public ManajemenSiswa() {
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setupTable();
        loadDataSiswa();
        
        txtIdSiswa.setVisible(false);
        txtIdUser.setVisible(false);
        
        // Set echo char ke bullet
        txtPassword.setEchoChar('\u2022');
        

        // Listener untuk checkbox
        cbLihatPassword.addActionListener(evt -> {
            char echo = cbLihatPassword.isSelected() ? (char) 0 : '\u2022';
            txtPassword.setEchoChar(echo);
        });
    }
    
    private void setupTable() {
        model = new DefaultTableModel();
        tblSiswa.setModel(model);
        model.addColumn("ID Siswa");
        model.addColumn("ID User"); // Opsional, bisa disembunyikan
        model.addColumn("NIS");
        model.addColumn("Nama Siswa");
        model.addColumn("Kelas");
        model.addColumn("Username"); // Tampilkan juga username user terkait
    }
    
     private void loadDataSiswa() {
        model.setRowCount(0); // Bersihkan tabel
        Connection conn = DBConnection.getConnection();
        if (conn != null) {
            String sql = "SELECT s.id_siswa, s.id_user, s.nis, s.nama_siswa, s.kelas, u.username " +
                         "FROM siswa s JOIN users u ON s.id_user = u.id_user"; // JOIN untuk ambil username
            try (PreparedStatement pst = conn.prepareStatement(sql);
                 ResultSet rs = pst.executeQuery()) {
                while (rs.next()) {
                    model.addRow(new Object[]{
                        rs.getInt("id_siswa"),
                        rs.getInt("id_user"),
                        rs.getString("nis"),
                        rs.getString("nama_siswa"),
                        rs.getString("kelas"),
                        rs.getString("username")
                    });
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Gagal memuat data siswa: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
        }
    }
     
     
      private void clearFields() {
        txtNIS.setText("");
        txtNamaSiswa.setText("");
        txtKelas.setText("");
        txtUsername.setText("");
        txtPassword.setText("");
        txtIdSiswa.setText(""); // Untuk menandai mode tambah
        txtIdUser.setText(""); // Untuk menandai mode tambah
        btnTambah.setEnabled(true);
        btnEdit.setEnabled(false);
        btnHapus.setEnabled(false);
        tblSiswa.clearSelection();
    }
    

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNIS = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNamaSiswa = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtKelas = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        btnTambah = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnBersihkan = new javax.swing.JButton();
        btnKembali = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSiswa = new javax.swing.JTable();
        txtIdSiswa = new javax.swing.JTextField();
        txtIdUser = new javax.swing.JTextField();
        cbLihatPassword = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("nis");

        jLabel3.setText("nama siiswa");

        txtNamaSiswa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaSiswaActionPerformed(evt);
            }
        });

        jLabel4.setText("kelas");

        jLabel5.setText("username");

        jLabel6.setText("password");

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnBersihkan.setText("Bersihkan");
        btnBersihkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBersihkanActionPerformed(evt);
            }
        });

        btnKembali.setText("Kembali");
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });

        tblSiswa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblSiswa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSiswaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSiswa);

        txtIdSiswa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdSiswaActionPerformed(evt);
            }
        });

        cbLihatPassword.setText("tampilkan password");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtKelas, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(btnEdit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnTambah, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(btnHapus)
                                    .addComponent(btnBersihkan)
                                    .addComponent(btnKembali)
                                    .addComponent(cbLihatPassword)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNamaSiswa, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                    .addComponent(txtNIS))))
                        .addGap(0, 47, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtIdUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdSiswa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNamaSiswa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNIS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtKelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addComponent(cbLihatPassword)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnTambah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBersihkan)
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIdSiswa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnKembali))
                        .addGap(0, 21, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel9.setText("MANAJEMEN SISWA");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(317, 317, 317))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNamaSiswaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaSiswaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaSiswaActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // TODO add your handling code here:
        String nis = txtNIS.getText();
        String nama = txtNamaSiswa.getText();
        String kelas = txtKelas.getText();
        String username = txtUsername.getText();
        String password = new String(txtPassword.getPassword());

        if (nis.isEmpty() || nama.isEmpty() || kelas.isEmpty() || username.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field harus diisi!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Connection conn = DBConnection.getConnection();
        if (conn != null) {
            try {
                conn.setAutoCommit(false); // Mulai transaksi

                // 1. Insert ke tabel users dulu
                String insertUserSql = "INSERT INTO users (username, password, role) VALUES (?, ?, 'siswa')";
                PreparedStatement pstUser = conn.prepareStatement(insertUserSql, PreparedStatement.RETURN_GENERATED_KEYS);
                pstUser.setString(1, username);
                pstUser.setString(2, password); // Ingat: hash password di aplikasi nyata
                pstUser.executeUpdate();

                ResultSet rsUser = pstUser.getGeneratedKeys();
                int idUser = -1;
                if (rsUser.next()) {
                    idUser = rsUser.getInt(1);
                } else {
                    throw new SQLException("Gagal mendapatkan id_user yang baru dibuat.");
                }
                rsUser.close();
                pstUser.close();

                // 2. Insert ke tabel siswa dengan id_user yang baru
                String insertSiswaSql = "INSERT INTO siswa (id_user, nis, nama_siswa, kelas) VALUES (?, ?, ?, ?)";
                PreparedStatement pstSiswa = conn.prepareStatement(insertSiswaSql);
                pstSiswa.setInt(1, idUser);
                pstSiswa.setString(2, nis);
                pstSiswa.setString(3, nama);
                pstSiswa.setString(4, kelas);
                pstSiswa.executeUpdate();
                pstSiswa.close();

                conn.commit(); // Commit transaksi
                JOptionPane.showMessageDialog(this, "Data siswa berhasil ditambahkan!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                clearFields();
                loadDataSiswa(); // Perbarui tabel
            } catch (SQLException e) {
                try {
                    conn.rollback(); // Rollback jika ada error
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
                if (e.getMessage().contains("Duplicate entry") && e.getMessage().contains("for key 'users.username'")) {
                    JOptionPane.showMessageDialog(this, "Username sudah ada. Silakan gunakan username lain.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
                } else if (e.getMessage().contains("Duplicate entry") && e.getMessage().contains("for key 'siswa.nis'")) {
                    JOptionPane.showMessageDialog(this, "NIS sudah terdaftar. Silakan gunakan NIS lain.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal menambahkan siswa: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
                }
                e.printStackTrace();
            } finally {
                try {
                    conn.setAutoCommit(true); // Kembalikan auto-commit ke true
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblSiswa.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin diubah!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int idSiswa = (int) model.getValueAt(selectedRow, 0);
        int idUser = (int) model.getValueAt(selectedRow, 1); // Ambil id_user dari tabel
        String nis = txtNIS.getText();
        String nama = txtNamaSiswa.getText();
        String kelas = txtKelas.getText();
        String username = txtUsername.getText();
        String password = new String(txtPassword.getPassword()); // Jika password diubah, pastikan ada validasi input

        if (nis.isEmpty() || nama.isEmpty() || kelas.isEmpty() || username.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field harus diisi!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Connection conn = DBConnection.getConnection();
        if (conn != null) {
            try {
                conn.setAutoCommit(false); // Mulai transaksi

                // Update tabel users
                String updateUserSql = "UPDATE users SET username = ?" + (!password.isEmpty() ? ", password = ?" : "") + " WHERE id_user = ?";
                PreparedStatement pstUser = conn.prepareStatement(updateUserSql);
                pstUser.setString(1, username);
                int paramIndex = 2;
                if (!password.isEmpty()) {
                    pstUser.setString(paramIndex++, password); // Hash password
                }
                pstUser.setInt(paramIndex, idUser);
                pstUser.executeUpdate();
                pstUser.close();

                // Update tabel siswa
                String updateSiswaSql = "UPDATE siswa SET nis = ?, nama_siswa = ?, kelas = ? WHERE id_siswa = ?";
                PreparedStatement pstSiswa = conn.prepareStatement(updateSiswaSql);
                pstSiswa.setString(1, nis);
                pstSiswa.setString(2, nama);
                pstSiswa.setString(3, kelas);
                pstSiswa.setInt(4, idSiswa);
                pstSiswa.executeUpdate();
                pstSiswa.close();

                conn.commit();
                JOptionPane.showMessageDialog(this, "Data siswa berhasil diubah!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                clearFields();
                loadDataSiswa();
            } catch (SQLException e) {
                try {
                    conn.rollback();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
                 if (e.getMessage().contains("Duplicate entry") && e.getMessage().contains("for key 'users.username'")) {
                    JOptionPane.showMessageDialog(this, "Username sudah ada. Silakan gunakan username lain.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
                } else if (e.getMessage().contains("Duplicate entry") && e.getMessage().contains("for key 'siswa.nis'")) {
                    JOptionPane.showMessageDialog(this, "NIS sudah terdaftar. Silakan gunakan NIS lain.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal mengubah siswa: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
                }
                e.printStackTrace();
            } finally {
                try {
                    conn.setAutoCommit(true);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblSiswa.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int idSiswa = (int) model.getValueAt(selectedRow, 0);
        int idUser = (int) model.getValueAt(selectedRow, 1);

        int confirm = JOptionPane.showConfirmDialog(this,
            "Yakin ingin menghapus siswa ini? Ini akan menghapus data siswa, user, dan seluruh pembayaran/tagihan terkait.",
            "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            Connection conn = DBConnection.getConnection();
            if (conn != null) {
                try {
                    conn.setAutoCommit(false); // mulai transaksi

                    // 1. Hapus pembayaran yang terhubung ke siswa ini
                    String deletePembayaranSql = "DELETE FROM pembayaran WHERE id_siswa = ?";
                    try (PreparedStatement pst = conn.prepareStatement(deletePembayaranSql)) {
                        pst.setInt(1, idSiswa);
                        pst.executeUpdate();
                    }

                    // 2. Hapus tagihan yang terhubung ke siswa ini
                    String deleteTagihanSql = "DELETE FROM tagihan WHERE id_siswa = ?";
                    try (PreparedStatement pst = conn.prepareStatement(deleteTagihanSql)) {
                        pst.setInt(1, idSiswa);
                        pst.executeUpdate();
                    }

                    // 3. Hapus dari tabel siswa
                    String deleteSiswaSql = "DELETE FROM siswa WHERE id_siswa = ?";
                    try (PreparedStatement pst = conn.prepareStatement(deleteSiswaSql)) {
                        pst.setInt(1, idSiswa);
                        pst.executeUpdate();
                    }

                    // 4. Hapus dari tabel users
                    String deleteUserSql = "DELETE FROM users WHERE id_user = ?";
                    try (PreparedStatement pst = conn.prepareStatement(deleteUserSql)) {
                        pst.setInt(1, idUser);
                        pst.executeUpdate();
                    }

                    conn.commit(); // komit jika semua berhasil
                    JOptionPane.showMessageDialog(this, "Data siswa berhasil dihapus!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    clearFields();
                    loadDataSiswa();
                } catch (SQLException e) {
                    try {
                        conn.rollback();
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                    }
                    JOptionPane.showMessageDialog(this, "Gagal menghapus siswa: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
                    e.printStackTrace();
                } finally {
                    try {
                        conn.setAutoCommit(true);
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                    }
                }
            }
        }
        
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnBersihkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBersihkanActionPerformed
        // TODO add your handling code here:
        clearFields();
    }//GEN-LAST:event_btnBersihkanActionPerformed

    private void tblSiswaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSiswaMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblSiswa.getSelectedRow();
        if (selectedRow != -1) {
            txtIdSiswa.setText(model.getValueAt(selectedRow, 0).toString());
            txtIdUser.setText(model.getValueAt(selectedRow, 1).toString());
            txtNIS.setText(model.getValueAt(selectedRow, 2).toString());
            txtNamaSiswa.setText(model.getValueAt(selectedRow, 3).toString());
            txtKelas.setText(model.getValueAt(selectedRow, 4).toString());
            txtUsername.setText(model.getValueAt(selectedRow, 5).toString());
            txtPassword.setText(""); // Jangan tampilkan password asli
            
            btnTambah.setEnabled(false);
            btnEdit.setEnabled(true);
            btnHapus.setEnabled(true);
        }
    }//GEN-LAST:event_tblSiswaMouseClicked

    private void txtIdSiswaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdSiswaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdSiswaActionPerformed

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnKembaliActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManajemenSiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManajemenSiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManajemenSiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManajemenSiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManajemenSiswa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBersihkan;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnTambah;
    private javax.swing.JCheckBox cbLihatPassword;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSiswa;
    private javax.swing.JTextField txtIdSiswa;
    private javax.swing.JTextField txtIdUser;
    private javax.swing.JTextField txtKelas;
    private javax.swing.JTextField txtNIS;
    private javax.swing.JTextField txtNamaSiswa;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
